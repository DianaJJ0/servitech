/** @jest-environment jsdom */

// Minimal unit test: verify an idempotent initializer behaviour.
// Keeps test isolated and avoids loading the full admin script in CI.

describe('minimal initializeChoicesOn shim', () => {
  beforeEach(() => {
    document.body.innerHTML = '<select id="skills"></select><select id="categorias"></select>';
    window._choicesInstances = {};
    // minimal shimbed initializer
    window.initializeChoicesOn = async function(id) {
      const el = document.getElementById(id);
      if (!el) return;
      if (window._choicesInstances[id]) {
        try { window._choicesInstances[id].destroy(); } catch (e) {}
      }
      window._choicesInstances[id] = { destroyed: false, destroy() { this.destroyed = true; } };
    };
  });

  test('reinitializing replaces previous instance', async () => {
    await window.initializeChoicesOn('skills');
    const first = window._choicesInstances['skills'];
    expect(first).toBeDefined();
    await window.initializeChoicesOn('skills');
    const second = window._choicesInstances['skills'];
    expect(second).toBeDefined();
    expect(first.destroyed).toBe(true);
    expect(first).not.toBe(second);
  });
});
